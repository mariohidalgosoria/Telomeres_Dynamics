mario@ph89969:~/Documents/Yuval/NCode/SM/FigS2/WTC$ (working directory)

***bring trajectories****
cp ../../../Drift_Rotation_Corr/WTC/CCLAT*[0-9]*.dat .

***compute displacements in tracks in WTC*** 

#open OCTAVE


#Delta_t=1

DeltaX=0;
DeltaY=0;
for i=2:364
 name=sprintf('CCLAT%d.dat',i);
 data=load(name);
 DX=zeros(rows(data)-1,1);
 DY=zeros(rows(data)-1,1);
 for i=1:(rows(data)-1)
  DX(i)=data(i+1,2)-data(i,2);
  DY(i)=data(i+1,3)-data(i,3);
 end 
 DeltaX=[DeltaX; DX];
 DeltaY=[DeltaY; DY];
end

DeltaX(1,:)=[];
DeltaY(1,:)=[];

save DYDT1.dat DeltaY -ascii
save DXDT1.dat DeltaX -ascii 



#Delta t=5

clear
DeltaX=0;
DeltaY=0;
Deltat=5;
for i=2:364
 name=sprintf('CCLAT%d.dat',i);
 data=load(name);
 DX=zeros(rows(data)- Deltat,1);
 DY=zeros(rows(data)- Deltat,1);
 for i=1:(rows(data)-Deltat)
  DX(i)=data(i+Deltat,2)-data(i,2);
  DY(i)=data(i+Deltat,3)-data(i,3);
 end 
 DeltaX=[DeltaX; DX];
 DeltaY=[DeltaY; DY];
end

DeltaX(1,:)=[];
DeltaY(1,:)=[];

save DYDT5.dat DeltaY -ascii
save DXDT5.dat DeltaX -ascii 





#Delta t=10

clear
DeltaX=0;
DeltaY=0;
Deltat=10;
for i=2:364
 name=sprintf('CCLAT%d.dat',i);
 data=load(name);
 DX=zeros(rows(data)- Deltat,1);
 DY=zeros(rows(data)- Deltat,1);
 for i=1:(rows(data)-Deltat)
  DX(i)=data(i+Deltat,2)-data(i,2);
  DY(i)=data(i+Deltat,3)-data(i,3);
 end 
 DeltaX=[DeltaX; DX];
 DeltaY=[DeltaY; DY];
end

DeltaX(1,:)=[];
DeltaY(1,:)=[];

save DYDT10.dat DeltaY -ascii
save DXDT10.dat DeltaX -ascii 



#Delta t=15

clear
DeltaX=0;
DeltaY=0;
Deltat=15;
for i=2:364
 name=sprintf('CCLAT%d.dat',i);
 data=load(name);
 DX=zeros(rows(data)- Deltat,1);
 DY=zeros(rows(data)- Deltat,1);
 for i=1:(rows(data)-Deltat)
  DX(i)=data(i+Deltat,2)-data(i,2);
  DY(i)=data(i+Deltat,3)-data(i,3);
 end 
 DeltaX=[DeltaX; DX];
 DeltaY=[DeltaY; DY];
end

DeltaX(1,:)=[];
DeltaY(1,:)=[];

save DYDT15.dat DeltaY -ascii
save DXDT15.dat DeltaX -ascii 


#Delta t=20
clear
DeltaX=0;
DeltaY=0;
Deltat=20;
for i=2:364
 name=sprintf('CCLAT%d.dat',i);
 data=load(name);
 DX=zeros(rows(data)- Deltat,1);
 DY=zeros(rows(data)- Deltat,1);
 for i=1:(rows(data)-Deltat)
  DX(i)=data(i+Deltat,2)-data(i,2);
  DY(i)=data(i+Deltat,3)-data(i,3);
 end 
 DeltaX=[DeltaX; DX];
 DeltaY=[DeltaY; DY];
end

DeltaX(1,:)=[];
DeltaY(1,:)=[];

save DYDT20.dat DeltaY -ascii
save DXDT20.dat DeltaX -ascii 



****Compute the normalized histograms***
#open gnuplot
binwidth =0.01
set boxwidth binwidth
sum = 0
s(x) = ((sum=sum+1), 0)
bin(x, width) = width*floor(x/width) + binwidth/2.0
plot "DXDT1.dat" u ($1):(s($1))
set table 'hist_DXDT1.dat'
plot "DXDT1.dat" u (bin($1, binwidth)):(1.0/(binwidth*sum)) smooth freq w boxes t ' '
unset table

#open gnuplot
binwidth = 0.01
set boxwidth binwidth
sum = 0
s(x) = ((sum=sum+1), 0)
bin(x, width) = width*floor(x/width) + binwidth/2.0
plot "DYDT1.dat" u ($1):(s($1))
set table 'hist_DYDT1.dat'
plot "DYDT1.dat" u (bin($1, binwidth)):(1.0/(binwidth*sum)) smooth freq w boxes t ' '
unset table

#open gnuplot
binwidth =0.05
set boxwidth binwidth
sum = 0
s(x) = ((sum=sum+1), 0)
bin(x, width) = width*floor(x/width) + binwidth/2.0
plot "DXDT5.dat" u ($1):(s($1))
set table 'hist_DXDT5.dat'
plot "DXDT5.dat" u (bin($1, binwidth)):(1.0/(binwidth*sum)) smooth freq w boxes t ' '
unset table

#open gnuplot
binwidth = 0.05
set boxwidth binwidth
sum = 0
s(x) = ((sum=sum+1), 0)
bin(x, width) = width*floor(x/width) + binwidth/2.0
plot "DYDT5.dat" u ($1):(s($1))
set table 'hist_DYDT5.dat'
plot "DYDT5.dat" u (bin($1, binwidth)):(1.0/(binwidth*sum)) smooth freq w boxes t ' '
unset table

#open gnuplot
binwidth =0.05
set boxwidth binwidth
sum = 0
s(x) = ((sum=sum+1), 0)
bin(x, width) = width*floor(x/width) + binwidth/2.0
plot "DXDT10.dat" u ($1):(s($1))
set table 'hist_DXDT10.dat'
plot "DXDT10.dat" u (bin($1, binwidth)):(1.0/(binwidth*sum)) smooth freq w boxes t ' '
unset table

#open gnuplot
binwidth = 0.05
set boxwidth binwidth
sum = 0
s(x) = ((sum=sum+1), 0)
bin(x, width) = width*floor(x/width) + binwidth/2.0
plot "DYDT10.dat" u ($1):(s($1))
set table 'hist_DYDT10.dat'
plot "DYDT10.dat" u (bin($1, binwidth)):(1.0/(binwidth*sum)) smooth freq w boxes t ' '
unset table

#open gnuplot
binwidth =0.1
set boxwidth binwidth
sum = 0
s(x) = ((sum=sum+1), 0)
bin(x, width) = width*floor(x/width) + binwidth/2.0
plot "DXDT15.dat" u ($1):(s($1))
set table 'hist_DXDT15.dat'
plot "DXDT15.dat" u (bin($1, binwidth)):(1.0/(binwidth*sum)) smooth freq w boxes t ' '
unset table

#open gnuplot
binwidth = 0.1
set boxwidth binwidth
sum = 0
s(x) = ((sum=sum+1), 0)
bin(x, width) = width*floor(x/width) + binwidth/2.0
plot "DYDT15.dat" u ($1):(s($1))
set table 'hist_DYDT15.dat'
plot "DYDT15.dat" u (bin($1, binwidth)):(1.0/(binwidth*sum)) smooth freq w boxes t ' '
unset table

#open gnuplot
binwidth =0.1
set boxwidth binwidth
sum = 0
s(x) = ((sum=sum+1), 0)
bin(x, width) = width*floor(x/width) + binwidth/2.0
plot "DXDT20.dat" u ($1):(s($1))
set table 'hist_DXDT20.dat'
plot "DXDT20.dat" u (bin($1, binwidth)):(1.0/(binwidth*sum)) smooth freq w boxes t ' '
unset table

#open gnuplot
binwidth = 0.1
set boxwidth binwidth
sum = 0
s(x) = ((sum=sum+1), 0)
bin(x, width) = width*floor(x/width) + binwidth/2.0
plot "DYDT20.dat" u ($1):(s($1))
set table 'hist_DYDT20.dat'
plot "DYDT20.dat" u (bin($1, binwidth)):(1.0/(binwidth*sum)) smooth freq w boxes t ' '
unset table



****Obtaining the fitting values of w and lambda=b*****
set logscale y
set format y "10^{%L}" 
W(x) = (1-0)/pi*(atan(x)+pi/2)+0
f(x)=(1-W(w))*(exp(-x**2 /(4*(a**2))  )/sqrt(4*pi*(a**2) ) ) + W(w)*(exp(-abs(x)/b  ) / (2*b) ) 
fit f(x) 'hist_DXDT1.dat' u 1:2 via w,a,b
print(W(w))
plot 'hist_DXDT1.dat'  u 1:2  w p, f(x)
Final set of parameters            Asymptotic Standard Error
=======================            ==========================
w               = -0.815966        +/- 0.1331       (16.31%)
a               = -0.0282002       +/- 0.0003191    (1.132%)
b               = 0.0579149        +/- 0.003775     (6.519%)

correlation matrix of the fit parameters:
                w      a      b      
w               1.000 
a              -0.074  1.000 
b              -0.716  0.647  1.000 
gnuplot> print(W(w))
0.28214849891917

gnuplot> fit f(x) 'hist_DYDT1.dat' u 1:2 via w,a,b
Final set of parameters            Asymptotic Standard Error
=======================            ==========================
w               = -0.630832        +/- 0.06285      (9.963%)
a               = -0.0303976       +/- 0.0002587    (0.8511%)
b               = 0.0550685        +/- 0.001725     (3.133%)

correlation matrix of the fit parameters:
                w      a      b      
w               1.000 
a              -0.089  1.000 
b              -0.522  0.804  1.000 
gnuplot> print(W(w))
0.320860936846834

gnuplot> fit f(x) 'hist_DXDT5.dat' u 1:2 via w,a,b
Final set of parameters            Asymptotic Standard Error
=======================            ==========================
w               = 0.146858         +/- 0.06549      (44.59%)
a               = -0.0488834       +/- 0.001154     (2.361%)
b               = 0.0707344        +/- 0.002328     (3.291%)

correlation matrix of the fit parameters:
                w      a      b      
w               1.000 
a              -0.389  1.000 
b              -0.521  0.956  1.000 
gnuplot> print(W(w))
0.546414667062228

gnuplot> fit f(x) 'hist_DYDT5.dat' u 1:2 via w,a,b
Final set of parameters            Asymptotic Standard Error
=======================            ==========================
w               = -0.12137         +/- 0.1008       (83.05%)
a               = -0.0499273       +/- 0.0008766    (1.756%)
b               = 0.0895883        +/- 0.00456      (5.09%)

correlation matrix of the fit parameters:
                w      a      b      
w               1.000 
a              -0.432  1.000 
b              -0.807  0.829  1.000 
gnuplot> print(W(w))
0.461554811258327


gnuplot> fit f(x) 'hist_DXDT10.dat' u 1:2 via w,a,b
Final set of parameters            Asymptotic Standard Error
=======================            ==========================
w               = 0.257884         +/- 0.1309       (50.74%)
a               = -0.0594877       +/- 0.002037     (3.424%)
b               = 0.103442         +/- 0.005161     (4.989%)

correlation matrix of the fit parameters:
                w      a      b      
w               1.000 
a              -0.322  1.000 
b              -0.680  0.851  1.000 
gnuplot> print(W(w))
0.580336503861685

gnuplot> fit f(x) 'hist_DYDT10.dat' u 1:2 via w,a,b
Final set of parameters            Asymptotic Standard Error
=======================            ==========================
w               = 0.681283         +/- 0.07896      (11.59%)
a               = -0.0699788       +/- 0.002019     (2.885%)
b               = 0.105469         +/- 0.002037     (1.931%)

correlation matrix of the fit parameters:
                w      a      b      
w               1.000 
a              -0.097  1.000 
b              -0.260  0.929  1.000 
gnuplot> print(W(w))
0.690366263998671

gnuplot> fit f(x) 'hist_DXDT15.dat' u 1:2 via w,a,b
Final set of parameters            Asymptotic Standard Error
=======================            ==========================
w               = 0.348388         +/- 0.3062       (87.9%)
a               = -0.077016        +/- 0.005542     (7.196%)
b               = 0.118382         +/- 0.01357      (11.47%)

correlation matrix of the fit parameters:
                w      a      b      
w               1.000 
a              -0.740  1.000 
b              -0.882  0.951  1.000 
gnuplot> print(W(w))
0.606709697566163

gnuplot> fit f(x) 'hist_DYDT15.dat' u 1:2 via w,a,b
Final set of parameters            Asymptotic Standard Error
=======================            ==========================
w               = 1.033            +/- 0.2135       (20.67%)
a               = -0.0838071       +/- 0.004888     (5.832%)
b               = 0.123398         +/- 0.004654     (3.771%)

correlation matrix of the fit parameters:
                w      a      b      
w               1.000 
a              -0.639  1.000 
b              -0.770  0.961  1.000 
gnuplot> print(W(w))
0.755165839302555


gnuplot> fit f(x) 'hist_DXDT20.dat' u 1:2 via w,a,b
Final set of parameters            Asymptotic Standard Error
=======================            ==========================
w               = 0.180875         +/- 0.2387       (132%)
a               = -0.0924992       +/- 0.00738      (7.979%)
b               = 0.136482         +/- 0.01562      (11.45%)

correlation matrix of the fit parameters:
                w      a      b      
w               1.000 
a              -0.496  1.000 
b              -0.643  0.954  1.000 
gnuplot> print(W(w))
0.556958496354457

gnuplot> fit f(x) 'hist_DYDT20.dat' u 1:2 via w,a,b
Final set of parameters            Asymptotic Standard Error
=======================            ==========================
w               = 0.945704         +/- 0.1631       (17.25%)
a               = -0.092219        +/- 0.003815     (4.137%)
b               = 0.145802         +/- 0.004304     (2.952%)

correlation matrix of the fit parameters:
                w      a      b      
w               1.000 
a              -0.539  1.000 
b              -0.748  0.928  1.000 
gnuplot> print(W(w))
0.741119743631943

****lambba=b value are saved in files***
***For DX in WTC 
lambda.txt   with (\Delta, lambda)
***For DY in WTC
lambdaY.txt with (\Delta, lambda)



*****Script for FigS2left, lambda versus \Delta t*****
#open gnuplot

set logscale xy
set format y "10^{%L}"
set xrange[1:21]
set xlabel '{/Symbol D}t' font "Times-Roman,20" offset -3,0,0
set ylabel '{/Symbol l}' font "Times-Roman,20" offset 0,6,0 
set key font ",14"
set xtics font ", 20"
set ytics font ", 20"
f(x)=c*x**(0.5)+ d
fit f(x) 'lambda.txt' u 1:2 via c,d
plot 'lambda.txt' u 1:2 w lp  t '{/Symbol D}X' lc rgb 'red' lw 3,'lambdaY.txt' u 1:2 w lp  t '{/Symbol D}Y' lc rgb 'blue' lw 3
replot f(x) lw 3 lc rgb 'black' t 'WT cells; {/Symbol l}={/Symbol D}t^{1/2}' 

***fitting the power of lambda as a function of \Delta t
g(x)=a*x**(b)
fit g(x) 'lambdaY.txt' u 1:2 via b,a
Final set of parameters            Asymptotic Standard Error
=======================            ==========================
b               = 0.335901         +/- 0.05914      (17.61%)
a               = 0.0480235        +/- 0.007244     (15.08%)

correlation matrix of the fit parameters:
                b      a      
b               1.000 
a              -0.962  1.000 
gnuplot> fit g(x) 'lambda.txt' u 1:2 via b,a
Final set of parameters            Asymptotic Standard Error
=======================            ==========================
b               = 0.335901         +/- 0.05914      (17.61%)
a               = 0.0480235        +/- 0.007244     (15.08%)

correlation matrix of the fit parameters:
                b      a      
b               1.000 
a              -0.962  1.000 



***Computing Average DX,DY in WTC

DeltaX=0;
DeltaY=0;
c=0;
for i=2:364
 name=sprintf('CCLAT%d.dat',i);
 data=load(name);
 DX=abs(data(rows(data),2)-data(1,2));
 DY=abs(data(rows(data),3)-data(1,3));
 DeltaX+=DX;
 DeltaY+=DY;
 c++;
end

DeltaX=DeltaX/c;
DeltaY=DeltaY/c;

DeltaX
#DeltaX =  0.26669
DeltaY
#DeltaY =  0.30575
sqrt(DeltaY^2 + DeltaX^2)
#ans =  0.40572




mario@ph89969:~/Documents/Yuval/NCode/SM/FigS2/LADC$ (working directory)

***bring trajectories****
cp ../../../Drift_Rotation_Corr/LADC/CCWLT*[0-9]*.dat .

***compute displacements in tracks in LADC*** 

#open OCTAVE


#Delta_t=1

DeltaX=0;
DeltaY=0;
for i=2:129
 name=sprintf('CCWLT%d.dat',i);
 data=load(name);
 DX=zeros(rows(data)-1,1);
 DY=zeros(rows(data)-1,1);
 for i=1:(rows(data)-1)
  DX(i)=data(i+1,2)-data(i,2);
  DY(i)=data(i+1,3)-data(i,3);
 end 
 DeltaX=[DeltaX; DX];
 DeltaY=[DeltaY; DY];
end

DeltaX(1,:)=[];
DeltaY(1,:)=[];

save DYDT1.dat DeltaY -ascii
save DXDT1.dat DeltaX -ascii 



#Delta t=5

clear
DeltaX=0;
DeltaY=0;
Deltat=5;
for i=2:129
 name=sprintf('CCWLT%d.dat',i);
 data=load(name);
 DX=zeros(rows(data)- Deltat,1);
 DY=zeros(rows(data)- Deltat,1);
 for i=1:(rows(data)-Deltat)
  DX(i)=data(i+Deltat,2)-data(i,2);
  DY(i)=data(i+Deltat,3)-data(i,3);
 end 
 DeltaX=[DeltaX; DX];
 DeltaY=[DeltaY; DY];
end

DeltaX(1,:)=[];
DeltaY(1,:)=[];

save DYDT5.dat DeltaY -ascii
save DXDT5.dat DeltaX -ascii 





#Delta t=10

clear
DeltaX=0;
DeltaY=0;
Deltat=10;
for i=2:129
 name=sprintf('CCWLT%d.dat',i);
 data=load(name);
 DX=zeros(rows(data)- Deltat,1);
 DY=zeros(rows(data)- Deltat,1);
 for i=1:(rows(data)-Deltat)
  DX(i)=data(i+Deltat,2)-data(i,2);
  DY(i)=data(i+Deltat,3)-data(i,3);
 end 
 DeltaX=[DeltaX; DX];
 DeltaY=[DeltaY; DY];
end

DeltaX(1,:)=[];
DeltaY(1,:)=[];

save DYDT10.dat DeltaY -ascii
save DXDT10.dat DeltaX -ascii 



#Delta t=15

clear
DeltaX=0;
DeltaY=0;
Deltat=15;
for i=2:129
 name=sprintf('CCWLT%d.dat',i);
 data=load(name);
 DX=zeros(rows(data)- Deltat,1);
 DY=zeros(rows(data)- Deltat,1);
 for i=1:(rows(data)-Deltat)
  DX(i)=data(i+Deltat,2)-data(i,2);
  DY(i)=data(i+Deltat,3)-data(i,3);
 end 
 DeltaX=[DeltaX; DX];
 DeltaY=[DeltaY; DY];
end

DeltaX(1,:)=[];
DeltaY(1,:)=[];

save DYDT15.dat DeltaY -ascii
save DXDT15.dat DeltaX -ascii 


#Delta t=20
clear
DeltaX=0;
DeltaY=0;
Deltat=20;
for i=2:129
 name=sprintf('CCWLT%d.dat',i);
 data=load(name);
 DX=zeros(rows(data)- Deltat,1);
 DY=zeros(rows(data)- Deltat,1);
 for i=1:(rows(data)-Deltat)
  DX(i)=data(i+Deltat,2)-data(i,2);
  DY(i)=data(i+Deltat,3)-data(i,3);
 end 
 DeltaX=[DeltaX; DX];
 DeltaY=[DeltaY; DY];
end

DeltaX(1,:)=[];
DeltaY(1,:)=[];

save DYDT20.dat DeltaY -ascii
save DXDT20.dat DeltaX -ascii 



****Compute the normalized histograms***
#open gnuplot
binwidth =0.01
set boxwidth binwidth
sum = 0
s(x) = ((sum=sum+1), 0)
bin(x, width) = width*floor(x/width) + binwidth/2.0
plot "DXDT1.dat" u ($1):(s($1))
set table 'hist_DXDT1.dat'
plot "DXDT1.dat" u (bin($1, binwidth)):(1.0/(binwidth*sum)) smooth freq w boxes t ' '
unset table

#open gnuplot
binwidth = 0.01
set boxwidth binwidth
sum = 0
s(x) = ((sum=sum+1), 0)
bin(x, width) = width*floor(x/width) + binwidth/2.0
plot "DYDT1.dat" u ($1):(s($1))
set table 'hist_DYDT1.dat'
plot "DYDT1.dat" u (bin($1, binwidth)):(1.0/(binwidth*sum)) smooth freq w boxes t ' '
unset table

#open gnuplot
binwidth =0.05
set boxwidth binwidth
sum = 0
s(x) = ((sum=sum+1), 0)
bin(x, width) = width*floor(x/width) + binwidth/2.0
plot "DXDT5.dat" u ($1):(s($1))
set table 'hist_DXDT5.dat'
plot "DXDT5.dat" u (bin($1, binwidth)):(1.0/(binwidth*sum)) smooth freq w boxes t ' '
unset table

#open gnuplot
binwidth = 0.05
set boxwidth binwidth
sum = 0
s(x) = ((sum=sum+1), 0)
bin(x, width) = width*floor(x/width) + binwidth/2.0
plot "DYDT5.dat" u ($1):(s($1))
set table 'hist_DYDT5.dat'
plot "DYDT5.dat" u (bin($1, binwidth)):(1.0/(binwidth*sum)) smooth freq w boxes t ' '
unset table

#open gnuplot
binwidth =0.05
set boxwidth binwidth
sum = 0
s(x) = ((sum=sum+1), 0)
bin(x, width) = width*floor(x/width) + binwidth/2.0
plot "DXDT10.dat" u ($1):(s($1))
set table 'hist_DXDT10.dat'
plot "DXDT10.dat" u (bin($1, binwidth)):(1.0/(binwidth*sum)) smooth freq w boxes t ' '
unset table

#open gnuplot
binwidth = 0.05
set boxwidth binwidth
sum = 0
s(x) = ((sum=sum+1), 0)
bin(x, width) = width*floor(x/width) + binwidth/2.0
plot "DYDT10.dat" u ($1):(s($1))
set table 'hist_DYDT10.dat'
plot "DYDT10.dat" u (bin($1, binwidth)):(1.0/(binwidth*sum)) smooth freq w boxes t ' '
unset table

#open gnuplot
binwidth =0.1
set boxwidth binwidth
sum = 0
s(x) = ((sum=sum+1), 0)
bin(x, width) = width*floor(x/width) + binwidth/2.0
plot "DXDT15.dat" u ($1):(s($1))
set table 'hist_DXDT15.dat'
plot "DXDT15.dat" u (bin($1, binwidth)):(1.0/(binwidth*sum)) smooth freq w boxes t ' '
unset table

#open gnuplot
binwidth = 0.1
set boxwidth binwidth
sum = 0
s(x) = ((sum=sum+1), 0)
bin(x, width) = width*floor(x/width) + binwidth/2.0
plot "DYDT15.dat" u ($1):(s($1))
set table 'hist_DYDT15.dat'
plot "DYDT15.dat" u (bin($1, binwidth)):(1.0/(binwidth*sum)) smooth freq w boxes t ' '
unset table

#open gnuplot
binwidth =0.1
set boxwidth binwidth
sum = 0
s(x) = ((sum=sum+1), 0)
bin(x, width) = width*floor(x/width) + binwidth/2.0
plot "DXDT20.dat" u ($1):(s($1))
set table 'hist_DXDT20.dat'
plot "DXDT20.dat" u (bin($1, binwidth)):(1.0/(binwidth*sum)) smooth freq w boxes t ' '
unset table

#open gnuplot
binwidth = 0.1
set boxwidth binwidth
sum = 0
s(x) = ((sum=sum+1), 0)
bin(x, width) = width*floor(x/width) + binwidth/2.0
plot "DYDT20.dat" u ($1):(s($1))
set table 'hist_DYDT20.dat'
plot "DYDT20.dat" u (bin($1, binwidth)):(1.0/(binwidth*sum)) smooth freq w boxes t ' '
unset table





****Obtaining the fitting values of w and lambda=b*****
***********************************************************************
#fitting Dx DT=1
# Restrict a to the range of [0:1]
W(x) = (1-0)/pi*(atan(x)+pi/2)+0
f(x)=(1-W(w))*(exp(-x**2 /(4*(a**2))  )/sqrt(4*pi*(a**2) ) ) + W(w)*(exp(-abs(x)/b  ) / (2*b) ) 
fit f(x) 'hist_DXDT1.dat' via w,a,b
Final set of parameters            Asymptotic Standard Error
=======================            ==========================
w               = -0.673093        +/- 0.1943       (28.87%)
a               = -0.0389742       +/- 0.0006375    (1.636%)
b               = 0.0926492        +/- 0.009901     (10.69%)

correlation matrix of the fit parameters:
                w      a      b      
w               1.000 
a               0.103  1.000 
b              -0.820  0.370  1.000 
gnuplot> print(W(w))
0.311421093932352
#fitting DY DT=1
gnuplot> fit f(x) 'hist_DYDT1.dat' via w,a,b
Final set of parameters            Asymptotic Standard Error
=======================            ==========================
w               = -0.105533        +/- 0.1103       (104.5%)
a               = -0.0375724       +/- 0.0006521    (1.736%)
b               = 0.0884915        +/- 0.005082     (5.743%)

correlation matrix of the fit parameters:
                w      a      b      
w               1.000 
a               0.098  1.000 
b              -0.814  0.382  1.000 
gnuplot> print(W(w))
0.466531643925765


#fitting DX DT=5
gnuplot> W(x) = (1-0)/pi*(atan(x)+pi/2)+0
gnuplot> f(x)=(1-W(w))*(exp(-x**2 /(4*(a**2))  )/sqrt(4*pi*(a**2) ) ) + W(w)*(exp(-abs(x)/b  ) / (2*b) )
gnuplot> fit f(x) 'hist_DXDT5.dat' via w,a,b
Final set of parameters            Asymptotic Standard Error
=======================            ==========================
w               = -0.233279        +/- 0.08312      (35.63%)
a               = 0.0905824        +/- 0.001009     (1.114%)
b               = 0.20762          +/- 0.009348     (4.502%)

correlation matrix of the fit parameters:
                w      a      b      
w               1.000 
a              -0.040  1.000 
b              -0.828 -0.421  1.000 
gnuplot> print(W(w))
0.427049505499799

#fitting DY DT=5
Final set of parameters            Asymptotic Standard Error
=======================            ==========================
w               = 0.622768         +/- 0.1315       (21.11%)
a               = 0.0691585        +/- 0.001605     (2.321%)
b               = 0.206316         +/- 0.008489     (4.114%)

correlation matrix of the fit parameters:
                w      a      b      
w               1.000 
a              -0.531  1.000 
b              -0.899  0.222  1.000 
gnuplot> print(W(w))
0.677296354923512





#fitting DX DT=10
# Restrict a to the range of [0:1]
W(x) = (1-0)/pi*(atan(x)+pi/2)+0
f(x)=(1-W(w))*(exp(-x**2 /(4*(a**2))  )/sqrt(4*pi*(a**2) ) ) + W(w)*(exp(-abs(x)/b  ) / (2*b) ) 
plot 'hist_DXDT10.dat'
Final set of parameters            Asymptotic Standard Error
=======================            ==========================
w               = -0.406093        +/- 0.1265       (31.15%)
a               = -0.132335        +/- 0.001621     (1.225%)
b               = 0.345433         +/- 0.02658      (7.695%)

correlation matrix of the fit parameters:
                w      a      d      
w               1.000 
a               0.309  1.000 
b              -0.891  0.050  1.000 
print(W(w))
0.377212542306512
#fitting DY DT=10


Final set of parameters            Asymptotic Standard Error
=======================            ==========================
w               = 0.840501         +/- 0.1959       (23.31%)
a               = -0.0929642       +/- 0.003061     (3.292%)
b               = 0.289226         +/- 0.01409      (4.871%)

correlation matrix of the fit parameters:
                w      a      d      
w               1.000 
a               0.644  1.000 
b              -0.917 -0.391  1.000 
gnuplot> print(W(w))
0.722483857044643




#fitting DX DT=15
# Restrict a to the range of [0:1]
W(x) = (1-0)/pi*(atan(x)+pi/2)+0
f(x)=(1-W(w))*(exp(-x**2 /(4*(a**2))  )/sqrt(4*pi*(a**2) ) ) + W(w)*(exp(-abs(x)/b  ) / (2*b) ) 
plot 'hist_DXDT15.dat'
Final set of parameters            Asymptotic Standard Error
=======================            ==========================
w               = -0.0379534       +/- 0.147        (387.4%)
a               = -0.156827        +/- 0.003335     (2.127%)
b               = 0.382893         +/- 0.02929      (7.649%)

correlation matrix of the fit parameters:
                w      a      d      
w               1.000 
a               0.159  1.000 
b              -0.864  0.252  1.000 
print(W(w))
0.4879225311308


#fitting DY DT=15
Final set of parameters            Asymptotic Standard Error
=======================            ==========================
w               = 0.605127         +/- 0.1824       (30.15%)
a               = -0.129733        +/- 0.004182     (3.224%)
b               = 0.38917          +/- 0.02285      (5.872%)

correlation matrix of the fit parameters:
                w      a      d      
w               1.000 
a               0.545  1.000 
b              -0.901 -0.244  1.000 
gnuplot> print(W(w))
0.67321806742657


#fitting DX DT=20
# Restrict a to the range of [0:1]
W(x) = (1-0)/pi*(atan(x)+pi/2)+0
f(x)=(1-W(w))*(exp(-x**2 /(4*(a**2))  )/sqrt(4*pi*(a**2) ) ) + W(w)*(exp(-abs(x)/b  ) / (2*b) ) 
plot 'hist_DXDT20.dat'
Final set of parameters            Asymptotic Standard Error
=======================            ==========================
w               = 0.504343         +/- 0.2234       (44.3%)
a               = -0.17316         +/- 0.006923     (3.998%)
b               = 0.402823         +/- 0.02723      (6.76%)

correlation matrix of the fit parameters:
                w      a      d      
w               1.000 
a               0.065  1.000 
b              -0.839  0.383  1.000 
gnuplot> print(W(w))
0.648687504701476


#fitting DY DT=20
Final set of parameters            Asymptotic Standard Error
=======================            ==========================
w               = 0.691951         +/- 0.1611       (23.29%)
a               = -0.152034        +/- 0.004364     (2.87%)
d               = 0.459523         +/- 0.02146      (4.67%)

correlation matrix of the fit parameters:
                w      a      d      
w               1.000 
a               0.539  1.000 
d              -0.896 -0.228  1.000 
gnuplot> print(W(w))
0.692674064036988




****lambba=b value are saved in files***
***For DX in LADC 
lambdaLA.txt   with (\Delta, lambda)
***For DY in LADC
lambdaLAY.txt with (\Delta, lambda)



*****Script for FigS2right, lambda versus \Delta t*****
#open gnuplot

set logscale xy
set format y "10^{%L}"
set xrange[1:21]
set xlabel '{/Symbol D}t' font "Times-Roman,20" offset -3,0,0
set ylabel '{/Symbol l}' font "Times-Roman,20" offset 0,6,0 
set key bottom font ",14"
set xtics font ", 20"
set ytics font ", 20"
f(x)=c*x**(0.5)+ d
fit f(x) 'lambdaLA.txt' u 1:2 via c,d
plot 'lambdaLA.txt' u 1:2 w lp  t '{/Symbol D}X' lc rgb 'red' lw 3,'lambdaLAY.txt' u 1:2 w lp  t '{/Symbol D}Y' lc rgb 'blue' lw 3 
replot f(x) lw 3 lc rgb 'black' t ' Lamin-A depleted cells;{/Symbol l}={/Symbol D}t^{1/2}' 

***fitting the power of lambda as a function of \Delta t
g(x)=a*x**(b)
fit g(x) 'lambdaLAY.txt' u 1:2 via b,a

Final set of parameters            Asymptotic Standard Error
=======================            ==========================
b               = 0.580388         +/- 0.03014      (5.194%)
a               = 0.0800126        +/- 0.006454     (8.066%)

gnuplot> fit g(x) 'lambdaLA.txt' u 1:2 via b,a
Final set of parameters            Asymptotic Standard Error
=======================            ==========================
b               = 0.466435         +/- 0.0705       (15.12%)
a               = 0.105476         +/- 0.01953      (18.51%)

correlation matrix of the fit parameters:
                b      a      
b               1.000 
a              -0.975  1.000 


correlation matrix of the fit parameters:
                b      a      m      
b               1.000 
a              -0.994  1.000 
m               0.917 -0.950  1.000 



***Computing Average DX,DY in LADC

DeltaX=0;
DeltaY=0;
c=0;
for i=2:129
 name=sprintf('CCWLT%d.dat',i);
 data=load(name);
 DX=abs(data(rows(data),2)-data(1,2));
 DY=abs(data(rows(data),3)-data(1,3));
 DeltaX+=DX;
 DeltaY+=DY;
 c++;
end

DeltaX=DeltaX/c;
DeltaY=DeltaY/c;

DeltaX
#DeltaX =  0.83497
DeltaY
#DeltaY =  0.94458
sqrt(DeltaY^2 + DeltaX^2)
#ans =  1.2607



